{"version":3,"file":"static/js/93.b41751a3.chunk.js","mappings":"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","sources":["redux/phonebook/selectors.js","components/ContactList/ContactItem.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","components/PhoneBook/PhoneBook.jsx","pages/MyPhoneBook/MyPhoneBook.jsx"],"sourcesContent":["export const getFilteredContacts = state => {\n  return state.contacts.items.filter(contact =>\n    contact.name.toLowerCase().includes(state.filter.filter.toLowerCase())\n  );\n};\nexport const getFilter = state => state.filter.filter;\n\nexport const getContacts = state => state.contacts.items;\n\nexport const getIsLoading = state => state.contacts.isLoading;\n\nexport const getError = state => state.contacts.error;\n","import { useDispatch } from 'react-redux';\nimport { deleteContact } from '../../redux/phonebook/operations';\nimport { Audio } from 'react-loader-spinner';\n\nconst ContactItem = ({ id, name, number, changeId, status, currentId }) => {\n  const dispatch = useDispatch();\n\n  const onDeleteContact = () => {\n    dispatch(deleteContact(id));\n    changeId(id);\n  };\n\n  return (\n    <li key={id}>\n      <p>{name}</p>\n      <p>{number}</p>\n      {status && id === currentId ? (\n        <Audio\n          height=\"20\"\n          width=\"20\"\n          color=\"green\"\n          radius=\"9\"\n          ariaLabel=\"loading\"\n        />\n      ) : (\n        <button type=\"button\" onClick={onDeleteContact}>\n          Delete\n        </button>\n      )}\n    </li>\n  );\n};\nexport { ContactItem };\n","import { useDispatch, useSelector } from 'react-redux';\nimport { getFilteredContacts } from 'redux/phonebook/selectors';\nimport { ContactItem } from './ContactItem';\nimport { useEffect, useRef } from 'react';\nimport { fetchContacts } from 'redux/phonebook/operations';\n\nconst ContactList = () => {\n  const contacts = useSelector(getFilteredContacts);\n  const dispatch = useDispatch();\n\n  const idRef = useRef();\n  const isLoading = useSelector(state => state.contacts.isLoading);\n\n  const changeId = id => {\n    idRef.current = id;\n  };\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <ul className=\"contactList\">\n        {contacts.map(contact => (\n          <ContactItem\n            name={contact.name}\n            number={contact.number}\n            key={contact.id}\n            id={contact.id}\n            status={isLoading}\n            changeId={changeId}\n            currentId={idRef.current}\n          />\n        ))}\n      </ul>\n    </>\n  );\n};\nexport { ContactList };\n","import { useDispatch, useSelector } from 'react-redux';\nimport { changeFilterAction } from 'redux/phonebook/filterSlice';\nimport { getFilter } from 'redux/phonebook/selectors';\n\nexport function Filter() {\n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch();\n  const onFilterName = event => {\n    dispatch(changeFilterAction(event.target.value));\n  };\n  return (\n    <>\n      <h2 className=\"contactsTitle\">Find contacts by name</h2>\n      <div className=\"findContact\">\n        <>\n          <input\n            className=\"inputContact\"\n            type=\"text\"\n            name=\"filter\"\n            onChange={onFilterName}\n            value={filter}\n          />\n        </>\n      </div>\n    </>\n  );\n}\n","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/phonebook/operations';\nimport { getContacts } from 'redux/phonebook/selectors';\n\nexport function PhoneBook() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const dispatch = useDispatch();\n  const contacts = useSelector(getContacts);\n\n  const handleAddContact = (name, number) => {\n    if (contacts.some(contact => contact.name === name)) {\n      return alert(`${name} is already in contacts `);\n    }\n\n    dispatch(addContact({ name, number }));\n  };\n\n  const onChangeName = event => {\n    const { value } = event.target;\n    setName(value);\n  };\n  const onChangeNumber = event => {\n    const { value } = event.target;\n    setNumber(value);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    handleAddContact(name, number);\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <>\n      <form onSubmit={handleSubmit}>\n        <label> Name</label>\n        <input\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={onChangeName}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n        <label> Number</label>\n        <input\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          onChange={onChangeNumber}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n        <button className=\"btnSubmit\" type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    </>\n  );\n}\n","import { ContactList } from 'components/ContactList';\nimport { Filter } from 'components/Filter';\nimport { PhoneBook } from 'components/PhoneBook';\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport { getIsLoading } from 'redux/phonebook/selectors';\nimport { getError } from 'redux/phonebook/selectors';\n\nexport default function MyPhoneBook() {\n  const isLoading = useSelector(getIsLoading);\n  const error = useSelector(getError);\n  return (\n    <div className=\"myPhoneBook\">\n      <div>\n        <h2 className=\"contactsTitle\"> Add contact</h2>\n        <PhoneBook />\n        {isLoading && !error && <p> Request in progress...</p>}\n        <Filter />\n      </div>\n\n      <div>\n        <h2 className=\"contactsTitle\"> Contacts</h2>\n        <ContactList />\n      </div>\n    </div>\n  );\n}\n"],"names":["getFilteredContacts","state","contacts","items","filter","contact","name","toLowerCase","includes","getFilter","getContacts","getIsLoading","isLoading","getError","error","ContactItem","id","number","changeId","status","currentId","dispatch","useDispatch","height","width","color","radius","ariaLabel","type","onClick","deleteContact","ContactList","useSelector","idRef","useRef","current","useEffect","fetchContacts","className","map","Filter","onChange","event","changeFilterAction","target","value","PhoneBook","useState","setName","setNumber","onSubmit","preventDefault","some","alert","addContact","handleAddContact","pattern","title","required","MyPhoneBook"],"sourceRoot":""}